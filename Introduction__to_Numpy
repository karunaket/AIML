{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPajf1GFU/t9MwCyCingyrf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Importing Numpy\n"],"metadata":{"id":"MUeWI6YMMyyA"}},{"cell_type":"code","source":["import numpy as np\n","np.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"dmZFJzJ5QQ84","executionInfo":{"status":"ok","timestamp":1708061476932,"user_tz":-330,"elapsed":15,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"285f672c-16d2-4117-824f-d12affdeb4c6"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.25.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["array1= np.array([1,2,3,4,5])"],"metadata":{"id":"fYypUX-jQ1tc","executionInfo":{"status":"ok","timestamp":1708061476932,"user_tz":-330,"elapsed":13,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["array1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6mV-WexyQ1qy","executionInfo":{"status":"ok","timestamp":1708061476933,"user_tz":-330,"elapsed":14,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"e6c1fcaa-a7f3-4457-fc01-aba70fe97a49"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5])"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["array2= np.array([7,4.5,'g',-9.2])"],"metadata":{"id":"zjF-rirpQ1oM","executionInfo":{"status":"ok","timestamp":1708061476933,"user_tz":-330,"elapsed":11,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["array2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EEvb7ClsQ1lu","executionInfo":{"status":"ok","timestamp":1708061476933,"user_tz":-330,"elapsed":11,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"844c2985-d56d-4e76-cb4b-d6f66f0dce41"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['7', '4.5', 'g', '-9.2'], dtype='<U32')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["array3 = np.array(\n","    [[1,2,3,4.,5],\n","     [6,7,8,9,10],\n","     [11,12,13,14,15]\n","     ]\n",")"],"metadata":{"id":"tg2bIcmXQ1jS","executionInfo":{"status":"ok","timestamp":1708061476933,"user_tz":-330,"elapsed":8,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["array3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iVF4nkUdQ1gw","executionInfo":{"status":"ok","timestamp":1708061476933,"user_tz":-330,"elapsed":8,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"d78c39b6-521f-48a4-f3f7-56a1dbf90501"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.,  2.,  3.,  4.,  5.],\n","       [ 6.,  7.,  8.,  9., 10.],\n","       [11., 12., 13., 14., 15.]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["pip install --upgrade numpy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IqUFV-tUQ1eQ","executionInfo":{"status":"ok","timestamp":1708061499147,"user_tz":-330,"elapsed":22220,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"1845d381-7590-4485-ad7c-7a6c695da348"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.25.2)\n","Collecting numpy\n","  Downloading numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (18.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m18.2/18.2 MB\u001b[0m \u001b[31m29.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: numpy\n","  Attempting uninstall: numpy\n","    Found existing installation: numpy 1.25.2\n","    Uninstalling numpy-1.25.2:\n","      Successfully uninstalled numpy-1.25.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","lida 0.0.10 requires fastapi, which is not installed.\n","lida 0.0.10 requires kaleido, which is not installed.\n","lida 0.0.10 requires python-multipart, which is not installed.\n","lida 0.0.10 requires uvicorn, which is not installed.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed numpy-1.26.4\n"]}]},{"cell_type":"code","source":["np.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"QUc8JwkdQ1cA","executionInfo":{"status":"ok","timestamp":1708061499147,"user_tz":-330,"elapsed":53,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"265f45d0-e5dc-4699-aeb1-98fc4c1883fc"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.25.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["array1.ndim\n"],"metadata":{"id":"T5yDKaB3Q1ZS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708061499148,"user_tz":-330,"elapsed":52,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"9c1461de-6ebb-46f0-a3dc-1a56b1101160"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["array2.ndim"],"metadata":{"id":"yu9zGvABQ1WB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708061499148,"user_tz":-330,"elapsed":46,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"aaac2ed6-ff54-4e1f-ab3a-2ddb056d61b4"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["array3.ndim"],"metadata":{"id":"225Ix67hQ1QT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708061499148,"user_tz":-330,"elapsed":44,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"b3c8f84e-89bd-4a79-a105-9b85935c563c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["array1.shape"],"metadata":{"id":"uZQ8VVYMQ1F-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708061499149,"user_tz":-330,"elapsed":42,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"7b17388f-0bb6-4b55-d179-efe32d18e468"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5,)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["array2.shape\n"],"metadata":{"id":"BNQ06M-BQ09W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708061499149,"user_tz":-330,"elapsed":39,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"01f46b95-df8e-47be-935f-6384cd2e372a"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4,)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["array1.size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pF2MVLh2Zcnr","executionInfo":{"status":"ok","timestamp":1708061499149,"user_tz":-330,"elapsed":36,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"af484811-3f8f-4422-a585-c5546a1807ed"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["array3.size\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_uwajqggZclq","executionInfo":{"status":"ok","timestamp":1708061499150,"user_tz":-330,"elapsed":35,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"594b0cfc-819f-4971-ae13-70c1184f3b4f"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["array1.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kOLKJlcDZcjP","executionInfo":{"status":"ok","timestamp":1708061499150,"user_tz":-330,"elapsed":32,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"3d2fe67a-f25a-42a1-c250-7827599f020f"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int64')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["array2.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gu9716YxZcgm","executionInfo":{"status":"ok","timestamp":1708061499150,"user_tz":-330,"elapsed":30,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"6ada0729-cc2b-42d2-a239-3e010b3c16b0"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('<U32')"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["array1.itemsize"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6nEAv2mUZceC","executionInfo":{"status":"ok","timestamp":1708061499151,"user_tz":-330,"elapsed":28,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"1a80580d-f005-4cb4-a195-5a67ef750553"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["array2.itemsize"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4omqs4xCZcbb","executionInfo":{"status":"ok","timestamp":1708061499151,"user_tz":-330,"elapsed":25,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"35b2c2bf-5a07-4295-8205-34e8275ccce9"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["128"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["array3.itemsize"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9_RQPFeDZcYs","executionInfo":{"status":"ok","timestamp":1708061499151,"user_tz":-330,"elapsed":23,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"a7c7a630-9bbd-4aed-c586-d9d3f45cfc37"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["array4= np.array([[1,2],[3,4]], dtype= float)"],"metadata":{"id":"aby2wfR0ZcWH","executionInfo":{"status":"ok","timestamp":1708061499151,"user_tz":-330,"elapsed":21,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["array4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m8_KGGZlZcTU","executionInfo":{"status":"ok","timestamp":1708061499151,"user_tz":-330,"elapsed":21,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"bd2f8de6-3a47-4469-acf8-e098538d2754"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 2.],\n","       [3., 4.]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["array4.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gWhWYALpZcQt","executionInfo":{"status":"ok","timestamp":1708061499152,"user_tz":-330,"elapsed":20,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"2bad5630-6a7b-4afa-a221-e52982675a53"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["array5= np.zeros((3,6))"],"metadata":{"id":"xvrhOftdZcN_","executionInfo":{"status":"ok","timestamp":1708061499152,"user_tz":-330,"elapsed":17,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["array5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MqbWiA7qZcLw","executionInfo":{"status":"ok","timestamp":1708061499152,"user_tz":-330,"elapsed":17,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"255ae7cb-5b5a-4dd4-bbe0-61eba729f281"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0.],\n","       [0., 0., 0., 0., 0., 0.]])"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["array6= np.ones((5,3))"],"metadata":{"id":"Hr5E_iphZcIv","executionInfo":{"status":"ok","timestamp":1708061500097,"user_tz":-330,"elapsed":63,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["array6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d9mhj_6SZcGM","executionInfo":{"status":"ok","timestamp":1708061500098,"user_tz":-330,"elapsed":63,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"7d42014a-0708-427a-d1d8-49ae0f1ad6a2"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1.],\n","       [1., 1., 1.],\n","       [1., 1., 1.],\n","       [1., 1., 1.],\n","       [1., 1., 1.]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["array7= np.arange(8)"],"metadata":{"id":"wVrxDZn-ZcFe","executionInfo":{"status":"ok","timestamp":1708061500098,"user_tz":-330,"elapsed":62,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["array7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"llJL_SjnZcE8","executionInfo":{"status":"ok","timestamp":1708061500098,"user_tz":-330,"elapsed":62,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"e7f5856f-f5cd-48f5-fbf7-37383c5ef663"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7])"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["array8= np.arange(-2,24,4)"],"metadata":{"id":"Vw1Ek1gjZcEa","executionInfo":{"status":"ok","timestamp":1708061500098,"user_tz":-330,"elapsed":59,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["array8"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y9R9f4hxZcDi","executionInfo":{"status":"ok","timestamp":1708061500099,"user_tz":-330,"elapsed":60,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"954e58c1-eeed-42ee-bfa0-f633b2b94f20"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-2,  2,  6, 10, 14, 18, 22])"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["Indexing and slicing"],"metadata":{"id":"Wy6GkGgmdILT"}},{"cell_type":"code","source":[],"metadata":{"id":"l-QQa0FrZcC_","executionInfo":{"status":"ok","timestamp":1708061500099,"user_tz":-330,"elapsed":57,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":32,"outputs":[]},{"cell_type":"markdown","source":["Exercisre 1:"],"metadata":{"id":"1LwHN6ybfHq5"}},{"cell_type":"code","source":["import numpy as natura"],"metadata":{"id":"_2gVKneXZcCW","executionInfo":{"status":"ok","timestamp":1708061500099,"user_tz":-330,"elapsed":57,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["natura.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"byyjSJyLZcB0","executionInfo":{"status":"ok","timestamp":1708061500099,"user_tz":-330,"elapsed":57,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"b42d1c26-965e-433f-c7af-b2402b94a1f2"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.25.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["array1= np.array([1,2,3,4,5])"],"metadata":{"id":"msfnTHKMZcBT","executionInfo":{"status":"ok","timestamp":1708061500099,"user_tz":-330,"elapsed":55,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["array1\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DgNHZkCKZcA0","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":56,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"9e2fa37b-62a1-4c10-afc6-fedb2e7a6dd2"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["array2= np.array([7,4.5,'g',-9.2])\n"],"metadata":{"id":"GyuZQm4RZcAR","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":54,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["array2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tNWJzBsgZb_r","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":54,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"0e6184f8-a05c-4285-8a64-688aac8e82d2"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['7', '4.5', 'g', '-9.2'], dtype='<U32')"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["reverse_array = array1[::-1]"],"metadata":{"id":"qJiI7KIFZbnp","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":51,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["reverse_array"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4YVP2GxqZbmM","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":51,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"d53670d2-3feb-4507-8ca2-dc728f3f3eb1"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 4, 3, 2, 1])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["identity_matrices =  natura.eye(3)"],"metadata":{"id":"vwcacM2pZblo","executionInfo":{"status":"ok","timestamp":1708061500100,"user_tz":-330,"elapsed":48,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["identity_matrices"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uDi7t1UwZbey","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":48,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"6829a813-7ee8-46c0-8055-705e3330dfc9"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["a = np.random.random((3,3,3))"],"metadata":{"id":"CNEKkOI7Zbcc","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":47,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rrIcQgnaZbZz","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":45,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"04690257-3f23-40d1-803a-bd7af46d49b2"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[0.68543135, 0.22887588, 0.49402118],\n","        [0.23434281, 0.11204935, 0.56276524],\n","        [0.59802443, 0.23078006, 0.10427676]],\n","\n","       [[0.35207248, 0.48531324, 0.47356299],\n","        [0.15582527, 0.79818743, 0.88420826],\n","        [0.90492015, 0.60479943, 0.30736127]],\n","\n","       [[0.7159712 , 0.07577057, 0.01400454],\n","        [0.26194787, 0.48415809, 0.05301234],\n","        [0.49529145, 0.26491671, 0.94313705]]])"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["a= np.mean(np.random.rand(3))"],"metadata":{"id":"E4uv58-oZbXE","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":43,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yfxl7D_XnaBl","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":43,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"11573e4e-ccab-4a84-d1a6-34ad7e772362"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.3114081826428193"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["b=np.arange(9).reshape(3,3)\n"],"metadata":{"id":"6G_ZSfLkZbUD","executionInfo":{"status":"ok","timestamp":1708061500101,"user_tz":-330,"elapsed":41,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["b\n","\n","\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zXNeKsRxkQ2b","executionInfo":{"status":"ok","timestamp":1708061500102,"user_tz":-330,"elapsed":42,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"e750b84a-b673-4a9c-ce42-7a069f994661"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [3, 4, 5],\n","       [6, 7, 8]])"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["a =np.ones((5,5))"],"metadata":{"id":"fjjip0jPntPD","executionInfo":{"status":"ok","timestamp":1708061500102,"user_tz":-330,"elapsed":39,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["a\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aFHYwix3ntbz","executionInfo":{"status":"ok","timestamp":1708061500102,"user_tz":-330,"elapsed":38,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"a0e4fdd1-045f-4698-f58d-2ccedd8ff9aa"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["a[1:-1,1:-1] = 0"],"metadata":{"id":"uAPDwp77ntef","executionInfo":{"status":"ok","timestamp":1708061500102,"user_tz":-330,"elapsed":37,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RP7g3q3untgw","executionInfo":{"status":"ok","timestamp":1708061500102,"user_tz":-330,"elapsed":35,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"7e53d16b-fef0-45dc-89b3-311ef2da4265"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["a=np.random.random((5,3))"],"metadata":{"id":"qEqitVhentix","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":34,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["b=np.random.random((3,2))"],"metadata":{"id":"-dUFHPDMntnB","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":34,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["c= np.dot(a,b)\n","\n"],"metadata":{"id":"BwumjHrlntqp","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":34,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["c\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xM3UjSh7nttF","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":34,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"d32f77e8-c5d1-4435-b271-2d003ce5242b"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.72096462, 1.08782188],\n","       [0.96100543, 1.07766398],\n","       [0.87457423, 1.42565942],\n","       [0.64596881, 1.05212091],\n","       [1.24256416, 1.45763914]])"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["a= np.zeros((5,5))"],"metadata":{"id":"WYQoWjoVntvX","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":31,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["a += np.arange(5)"],"metadata":{"id":"Pqp5trN3ntxp","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":31,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AUb35EtDntzr","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":30,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"cca7553e-1c93-45b4-ae8d-134961156319"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 1., 2., 3., 4.],\n","       [0., 1., 2., 3., 4.],\n","       [0., 1., 2., 3., 4.],\n","       [0., 1., 2., 3., 4.],\n","       [0., 1., 2., 3., 4.]])"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["a=np.pad(np.zeros((3,3)), pad_width=1, mode='constant', constant_values=1)"],"metadata":{"id":"kKFB1IWTnt16","executionInfo":{"status":"ok","timestamp":1708061500103,"user_tz":-330,"elapsed":28,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P8fXEd0rnt3q","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":29,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"9a4204a4-e724-4c8a-c519-188e2eb1f450"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 0., 0., 0., 1.],\n","       [1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":[],"metadata":{"id":"arx11u94nt5s","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":26,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["a= np.random.rand(30)\n"],"metadata":{"id":"0MI-5PaAnt8M","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":26,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["b= np.mean(a)"],"metadata":{"id":"9aBMwRuXnt-b","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":25,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":63,"outputs":[]},{"cell_type":"code","source":["b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ISDWuE2tnuI1","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":25,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"83a8d9bd-df8c-44b3-fd07-a1c1ea22db1d"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5352127430902448"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["a= np.random.rand(10)"],"metadata":{"id":"S74xmSpZnuJn","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":23,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["b=np.min(a)\n"],"metadata":{"id":"SJtpgN4bnuKR","executionInfo":{"status":"ok","timestamp":1708061500104,"user_tz":-330,"elapsed":23,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["c=np.max(a)"],"metadata":{"id":"Qer8RO9EnuK7","executionInfo":{"status":"ok","timestamp":1708061500105,"user_tz":-330,"elapsed":24,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["b\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cgpp3xVLnuMT","executionInfo":{"status":"ok","timestamp":1708061500105,"user_tz":-330,"elapsed":23,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"c2cffa67-3796-453a-f5b9-fbaf9c10e843"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.20791170258582736"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iqSrNjkPnujO","executionInfo":{"status":"ok","timestamp":1708061500105,"user_tz":-330,"elapsed":21,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"250773f8-d1f9-40b3-e9d4-7828a72a3c08"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9733628000717344"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":[],"metadata":{"id":"12bCrwNlYfxL","executionInfo":{"status":"ok","timestamp":1708061500105,"user_tz":-330,"elapsed":18,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dHoq1aKrYfuB","executionInfo":{"status":"ok","timestamp":1708061500105,"user_tz":-330,"elapsed":18,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"uoMdZCpZYfrT","executionInfo":{"status":"ok","timestamp":1708061500740,"user_tz":-330,"elapsed":653,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"djAaDIhaYfo8","executionInfo":{"status":"ok","timestamp":1708061500740,"user_tz":-330,"elapsed":13,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"no7l-SoeYfmN","executionInfo":{"status":"ok","timestamp":1708061500740,"user_tz":-330,"elapsed":13,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iOn-TPcWYfj0","executionInfo":{"status":"ok","timestamp":1708061500742,"user_tz":-330,"elapsed":14,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"markdown","source":["---------Matplotlib-----------\n"],"metadata":{"id":"3QBZhPDpetby"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","\n","print(matplotlib.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J3F4_JSDYfbi","executionInfo":{"status":"ok","timestamp":1708063109590,"user_tz":-330,"elapsed":403,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"f84a74eb-ac5f-4b1c-a54e-dae610a1cd5a"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stdout","text":["3.7.1\n"]}]},{"cell_type":"code","source":["a = np.array([1,5,8,9])\n","b = np.array([5,7,3,7])"],"metadata":{"id":"1o4VdP6pe4gm","executionInfo":{"status":"ok","timestamp":1708063071583,"user_tz":-330,"elapsed":429,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["plt.plot(a,b)\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"MAXaGdM3e4d7","executionInfo":{"status":"ok","timestamp":1708063160763,"user_tz":-330,"elapsed":776,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"8e19ed15-a3a1-4583-f674-199cebfe45ca"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":87},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"i0JAO8-Se4bW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"iTNioAsme4Yu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"GG2ZFEXHe4WV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"DqKLsmcie4T9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"877N2Rdye4RY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"reM9E_jUe4O4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zEEKVfLKe4L8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vrlXgLcde4Gw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"HnKQ7UBFe4EE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6X4TWpj_e4Ax"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Bd6sOs4hYfKw","executionInfo":{"status":"ok","timestamp":1708061500742,"user_tz":-330,"elapsed":13,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","du = 'https://github.com/datasets/five-thirty-eight-datasets/blob/master/datasets/college-majors/data/recent-grads.csv'\n","df = pd.read_csv(du)\n","type(df)\n","pd.set_option(\"display.max.coloums\",None)\n","df.head()\n","df.plot(x= \"Rank\", y=[\"p25th\",\"Median\",\"p75th\"])\n","df.show()\n"],"metadata":{"id":"oKZFj_RnnukF","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"error","timestamp":1708065741467,"user_tz":-330,"elapsed":435,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"4f6a4a78-137e-4915-dc3d-e7fd11c6fff5"},"execution_count":99,"outputs":[{"output_type":"error","ename":"ParserError","evalue":"Error tokenizing data. C error: Expected 1 fields in line 41, saw 14\n","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mParserError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-99-fc0ca05b883c>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdu\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'https://github.com/datasets/five-thirty-eight-datasets/blob/master/datasets/college-majors/data/recent-grads.csv'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdu\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_option\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"display.max.coloums\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    609\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    610\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 611\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mparser\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    612\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    613\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m   1776\u001b[0m                     \u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1777\u001b[0m                     \u001b[0mcol_dict\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1778\u001b[0;31m                 \u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m  \u001b[0;31m# type: ignore[attr-defined]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1779\u001b[0m                     \u001b[0mnrows\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1780\u001b[0m                 )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36mread\u001b[0;34m(self, nrows)\u001b[0m\n\u001b[1;32m    228\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlow_memory\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 230\u001b[0;31m                 \u001b[0mchunks\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_low_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnrows\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    231\u001b[0m                 \u001b[0;31m# destructive to chunks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_concatenate_chunks\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchunks\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.read_low_memory\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._read_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mParserError\u001b[0m: Error tokenizing data. C error: Expected 1 fields in line 41, saw 14\n"]}]},{"cell_type":"code","source":["data = pd.read_csv('/content/.csv')\n","data"],"metadata":{"id":"rEYbknxEnukw","colab":{"base_uri":"https://localhost:8080/","height":739},"executionInfo":{"status":"ok","timestamp":1708062497996,"user_tz":-330,"elapsed":452,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"f57615ec-a459-48f9-9c41-26dac2c0cfc9"},"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id               name               nationality                 city  \\\n","0      0          Kiana Lor                     China               Suzhou   \n","1      1     Joshua Lonaker  United States of America        Santa Clarita   \n","2      2      Dakota Blanco  United States of America              Oakland   \n","3      3    Natasha Yarusso  United States of America        Castro Valley   \n","4      4     Brooke Cazares                    Brazil  São José dos Campos   \n","..   ...                ...                       ...                  ...   \n","302  302        Austin Haas  United States of America             Columbus   \n","303  303    Madison Fithian  United States of America          Los Angeles   \n","304  304  Zachary Mulvahill  United States of America          Los Angeles   \n","305  305   Eliana Michelsen  United States of America              Oakland   \n","306  306    Dane Whittemore                    Canada              Toronto   \n","\n","     latitude  longitude gender  ethnic.group  age  english.grade  math.grade  \\\n","0       31.31     120.62      F           NaN   22            3.5         3.7   \n","1       34.39    -118.54      M           NaN   22            2.9         3.2   \n","2       37.80    -122.27      F           NaN   22            3.9         3.8   \n","3       37.69    -122.09      F           NaN   20            3.3         2.8   \n","4      -23.18     -45.88      F           NaN   21            3.7         2.6   \n","..        ...        ...    ...           ...  ...            ...         ...   \n","302     39.96     -83.00      M           NaN   20            3.6         3.7   \n","303     34.05    -118.24      F           NaN   20            3.6         3.9   \n","304     34.05    -118.24      M           NaN   20            3.2         3.4   \n","305     37.80    -122.27      F           NaN   23            3.0         2.8   \n","306     43.67     -79.42      M           NaN   21            3.8         3.2   \n","\n","     sciences.grade  language.grade  portfolio.rating  coverletter.rating  \\\n","0               3.1             1.0                 4                 4.0   \n","1               3.6             5.0                 5                 4.0   \n","2               3.2             5.0                 3                 3.0   \n","3               3.2             5.0                 5                 2.0   \n","4               3.4             1.0                 4                 4.0   \n","..              ...             ...               ...                 ...   \n","302             3.1             5.0                 4                 5.0   \n","303             4.0             5.0                 5                 5.0   \n","304             3.9             5.0                 5                 5.0   \n","305             2.9             5.0                 4                 4.0   \n","306             4.0             5.0                 5                 4.0   \n","\n","     refletter.rating  \n","0                   4  \n","1                   5  \n","2                   4  \n","3                   4  \n","4                   5  \n","..                ...  \n","302                 5  \n","303                 3  \n","304                 3  \n","305                 5  \n","306                 5  \n","\n","[307 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-86232602-8145-4024-bdd5-f8257d5005c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>nationality</th>\n","      <th>city</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>gender</th>\n","      <th>ethnic.group</th>\n","      <th>age</th>\n","      <th>english.grade</th>\n","      <th>math.grade</th>\n","      <th>sciences.grade</th>\n","      <th>language.grade</th>\n","      <th>portfolio.rating</th>\n","      <th>coverletter.rating</th>\n","      <th>refletter.rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Kiana Lor</td>\n","      <td>China</td>\n","      <td>Suzhou</td>\n","      <td>31.31</td>\n","      <td>120.62</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>3.5</td>\n","      <td>3.7</td>\n","      <td>3.1</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Joshua Lonaker</td>\n","      <td>United States of America</td>\n","      <td>Santa Clarita</td>\n","      <td>34.39</td>\n","      <td>-118.54</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>2.9</td>\n","      <td>3.2</td>\n","      <td>3.6</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Dakota Blanco</td>\n","      <td>United States of America</td>\n","      <td>Oakland</td>\n","      <td>37.80</td>\n","      <td>-122.27</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>3.9</td>\n","      <td>3.8</td>\n","      <td>3.2</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Natasha Yarusso</td>\n","      <td>United States of America</td>\n","      <td>Castro Valley</td>\n","      <td>37.69</td>\n","      <td>-122.09</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.3</td>\n","      <td>2.8</td>\n","      <td>3.2</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Brooke Cazares</td>\n","      <td>Brazil</td>\n","      <td>São José dos Campos</td>\n","      <td>-23.18</td>\n","      <td>-45.88</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>21</td>\n","      <td>3.7</td>\n","      <td>2.6</td>\n","      <td>3.4</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>302</th>\n","      <td>302</td>\n","      <td>Austin Haas</td>\n","      <td>United States of America</td>\n","      <td>Columbus</td>\n","      <td>39.96</td>\n","      <td>-83.00</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.6</td>\n","      <td>3.7</td>\n","      <td>3.1</td>\n","      <td>5.0</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>303</th>\n","      <td>303</td>\n","      <td>Madison Fithian</td>\n","      <td>United States of America</td>\n","      <td>Los Angeles</td>\n","      <td>34.05</td>\n","      <td>-118.24</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.6</td>\n","      <td>3.9</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>304</th>\n","      <td>304</td>\n","      <td>Zachary Mulvahill</td>\n","      <td>United States of America</td>\n","      <td>Los Angeles</td>\n","      <td>34.05</td>\n","      <td>-118.24</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.2</td>\n","      <td>3.4</td>\n","      <td>3.9</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>305</th>\n","      <td>305</td>\n","      <td>Eliana Michelsen</td>\n","      <td>United States of America</td>\n","      <td>Oakland</td>\n","      <td>37.80</td>\n","      <td>-122.27</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>23</td>\n","      <td>3.0</td>\n","      <td>2.8</td>\n","      <td>2.9</td>\n","      <td>5.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>306</td>\n","      <td>Dane Whittemore</td>\n","      <td>Canada</td>\n","      <td>Toronto</td>\n","      <td>43.67</td>\n","      <td>-79.42</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>21</td>\n","      <td>3.8</td>\n","      <td>3.2</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>307 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86232602-8145-4024-bdd5-f8257d5005c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86232602-8145-4024-bdd5-f8257d5005c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86232602-8145-4024-bdd5-f8257d5005c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a656c389-5db5-4e8b-b7d5-f4f15ed5c381\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a656c389-5db5-4e8b-b7d5-f4f15ed5c381')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a656c389-5db5-4e8b-b7d5-f4f15ed5c381 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 307,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88,\n        \"min\": 0,\n        \"max\": 306,\n        \"samples\": [\n          183,\n          60,\n          124\n        ],\n        \"num_unique_values\": 307,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Isabella Martinez\",\n          \"Katelyn Sharp\",\n          \"Austin Harline\"\n        ],\n        \"num_unique_values\": 307,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nationality\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Netherlands\",\n          \"Korea (Republic of)\",\n          \"Egypt\"\n        ],\n        \"num_unique_values\": 31,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Hospet\",\n          \"Baltimore\",\n          \"Montgomery Village\"\n        ],\n        \"num_unique_values\": 161,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.4985817551899,\n        \"min\": -33.45,\n        \"max\": 59.89,\n        \"samples\": [\n          32.95,\n          13.68,\n          38.13\n        ],\n        \"num_unique_values\": 156,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 81.24914611240682,\n        \"min\": -123.13,\n        \"max\": 139.75,\n        \"samples\": [\n          -87.94,\n          72.89,\n          -121.96\n        ],\n        \"num_unique_values\": 158,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"F\",\n          \"M\",\n          \"other\"\n        ],\n        \"num_unique_values\": 3,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ethnic.group\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": NaN,\n        \"min\": NaN,\n        \"max\": NaN,\n        \"samples\": [],\n        \"num_unique_values\": 0,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 19,\n        \"max\": 26,\n        \"samples\": [],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"english.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5387235992519398,\n        \"min\": 1.5,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 25,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"math.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.47683919169989625,\n        \"min\": 2.1,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 20,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sciences.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5090806425671309,\n        \"min\": 1.4,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 24,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"language.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9964742725837499,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"samples\": [],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"portfolio.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"samples\": [],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coverletter.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8239362872904923,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"samples\": [],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"refletter.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"samples\": [],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["data"],"metadata":{"id":"VQborRfHnulb","colab":{"base_uri":"https://localhost:8080/","height":739},"executionInfo":{"status":"ok","timestamp":1708061936126,"user_tz":-330,"elapsed":440,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}},"outputId":"ce426816-01f5-4acb-dc1a-e9d4403c5b9a"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id               name               nationality                 city  \\\n","0      0          Kiana Lor                     China               Suzhou   \n","1      1     Joshua Lonaker  United States of America        Santa Clarita   \n","2      2      Dakota Blanco  United States of America              Oakland   \n","3      3    Natasha Yarusso  United States of America        Castro Valley   \n","4      4     Brooke Cazares                    Brazil  São José dos Campos   \n","..   ...                ...                       ...                  ...   \n","302  302        Austin Haas  United States of America             Columbus   \n","303  303    Madison Fithian  United States of America          Los Angeles   \n","304  304  Zachary Mulvahill  United States of America          Los Angeles   \n","305  305   Eliana Michelsen  United States of America              Oakland   \n","306  306    Dane Whittemore                    Canada              Toronto   \n","\n","     latitude  longitude gender  ethnic.group  age  english.grade  math.grade  \\\n","0       31.31     120.62      F           NaN   22            3.5         3.7   \n","1       34.39    -118.54      M           NaN   22            2.9         3.2   \n","2       37.80    -122.27      F           NaN   22            3.9         3.8   \n","3       37.69    -122.09      F           NaN   20            3.3         2.8   \n","4      -23.18     -45.88      F           NaN   21            3.7         2.6   \n","..        ...        ...    ...           ...  ...            ...         ...   \n","302     39.96     -83.00      M           NaN   20            3.6         3.7   \n","303     34.05    -118.24      F           NaN   20            3.6         3.9   \n","304     34.05    -118.24      M           NaN   20            3.2         3.4   \n","305     37.80    -122.27      F           NaN   23            3.0         2.8   \n","306     43.67     -79.42      M           NaN   21            3.8         3.2   \n","\n","     sciences.grade  language.grade  portfolio.rating  coverletter.rating  \\\n","0               3.1             1.0                 4                 4.0   \n","1               3.6             5.0                 5                 4.0   \n","2               3.2             5.0                 3                 3.0   \n","3               3.2             5.0                 5                 2.0   \n","4               3.4             1.0                 4                 4.0   \n","..              ...             ...               ...                 ...   \n","302             3.1             5.0                 4                 5.0   \n","303             4.0             5.0                 5                 5.0   \n","304             3.9             5.0                 5                 5.0   \n","305             2.9             5.0                 4                 4.0   \n","306             4.0             5.0                 5                 4.0   \n","\n","     refletter.rating  \n","0                   4  \n","1                   5  \n","2                   4  \n","3                   4  \n","4                   5  \n","..                ...  \n","302                 5  \n","303                 3  \n","304                 3  \n","305                 5  \n","306                 5  \n","\n","[307 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-680bb63c-765e-499d-99e4-e64d39c33255\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>nationality</th>\n","      <th>city</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>gender</th>\n","      <th>ethnic.group</th>\n","      <th>age</th>\n","      <th>english.grade</th>\n","      <th>math.grade</th>\n","      <th>sciences.grade</th>\n","      <th>language.grade</th>\n","      <th>portfolio.rating</th>\n","      <th>coverletter.rating</th>\n","      <th>refletter.rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Kiana Lor</td>\n","      <td>China</td>\n","      <td>Suzhou</td>\n","      <td>31.31</td>\n","      <td>120.62</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>3.5</td>\n","      <td>3.7</td>\n","      <td>3.1</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Joshua Lonaker</td>\n","      <td>United States of America</td>\n","      <td>Santa Clarita</td>\n","      <td>34.39</td>\n","      <td>-118.54</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>2.9</td>\n","      <td>3.2</td>\n","      <td>3.6</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Dakota Blanco</td>\n","      <td>United States of America</td>\n","      <td>Oakland</td>\n","      <td>37.80</td>\n","      <td>-122.27</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>3.9</td>\n","      <td>3.8</td>\n","      <td>3.2</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Natasha Yarusso</td>\n","      <td>United States of America</td>\n","      <td>Castro Valley</td>\n","      <td>37.69</td>\n","      <td>-122.09</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.3</td>\n","      <td>2.8</td>\n","      <td>3.2</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Brooke Cazares</td>\n","      <td>Brazil</td>\n","      <td>São José dos Campos</td>\n","      <td>-23.18</td>\n","      <td>-45.88</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>21</td>\n","      <td>3.7</td>\n","      <td>2.6</td>\n","      <td>3.4</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>302</th>\n","      <td>302</td>\n","      <td>Austin Haas</td>\n","      <td>United States of America</td>\n","      <td>Columbus</td>\n","      <td>39.96</td>\n","      <td>-83.00</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.6</td>\n","      <td>3.7</td>\n","      <td>3.1</td>\n","      <td>5.0</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>303</th>\n","      <td>303</td>\n","      <td>Madison Fithian</td>\n","      <td>United States of America</td>\n","      <td>Los Angeles</td>\n","      <td>34.05</td>\n","      <td>-118.24</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.6</td>\n","      <td>3.9</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>304</th>\n","      <td>304</td>\n","      <td>Zachary Mulvahill</td>\n","      <td>United States of America</td>\n","      <td>Los Angeles</td>\n","      <td>34.05</td>\n","      <td>-118.24</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","      <td>3.2</td>\n","      <td>3.4</td>\n","      <td>3.9</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>5.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>305</th>\n","      <td>305</td>\n","      <td>Eliana Michelsen</td>\n","      <td>United States of America</td>\n","      <td>Oakland</td>\n","      <td>37.80</td>\n","      <td>-122.27</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>23</td>\n","      <td>3.0</td>\n","      <td>2.8</td>\n","      <td>2.9</td>\n","      <td>5.0</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>306</th>\n","      <td>306</td>\n","      <td>Dane Whittemore</td>\n","      <td>Canada</td>\n","      <td>Toronto</td>\n","      <td>43.67</td>\n","      <td>-79.42</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>21</td>\n","      <td>3.8</td>\n","      <td>3.2</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>307 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-680bb63c-765e-499d-99e4-e64d39c33255')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-680bb63c-765e-499d-99e4-e64d39c33255 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-680bb63c-765e-499d-99e4-e64d39c33255');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0777eab5-a5dc-49a8-9098-dd0d4cade4b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0777eab5-a5dc-49a8-9098-dd0d4cade4b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0777eab5-a5dc-49a8-9098-dd0d4cade4b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 307,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88,\n        \"min\": 0,\n        \"max\": 306,\n        \"samples\": [\n          183,\n          60,\n          124\n        ],\n        \"num_unique_values\": 307,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Isabella Martinez\",\n          \"Katelyn Sharp\",\n          \"Austin Harline\"\n        ],\n        \"num_unique_values\": 307,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"nationality\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Netherlands\",\n          \"Korea (Republic of)\",\n          \"Egypt\"\n        ],\n        \"num_unique_values\": 31,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Hospet\",\n          \"Baltimore\",\n          \"Montgomery Village\"\n        ],\n        \"num_unique_values\": 161,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"latitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.4985817551899,\n        \"min\": -33.45,\n        \"max\": 59.89,\n        \"samples\": [\n          32.95,\n          13.68,\n          38.13\n        ],\n        \"num_unique_values\": 156,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"longitude\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 81.24914611240682,\n        \"min\": -123.13,\n        \"max\": 139.75,\n        \"samples\": [\n          -87.94,\n          72.89,\n          -121.96\n        ],\n        \"num_unique_values\": 158,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"F\",\n          \"M\",\n          \"other\"\n        ],\n        \"num_unique_values\": 3,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ethnic.group\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": NaN,\n        \"min\": NaN,\n        \"max\": NaN,\n        \"samples\": [],\n        \"num_unique_values\": 0,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 19,\n        \"max\": 26,\n        \"samples\": [],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"english.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5387235992519398,\n        \"min\": 1.5,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 25,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"math.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.47683919169989625,\n        \"min\": 2.1,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 20,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sciences.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5090806425671309,\n        \"min\": 1.4,\n        \"max\": 4.0,\n        \"samples\": [],\n        \"num_unique_values\": 24,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"language.grade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9964742725837499,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"samples\": [],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"portfolio.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"samples\": [],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coverletter.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8239362872904923,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"samples\": [],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"refletter.rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"samples\": [],\n        \"num_unique_values\": 5,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":[],"metadata":{"id":"scshIE7SnumF","executionInfo":{"status":"aborted","timestamp":1708061500742,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Besbeoe5num5","executionInfo":{"status":"aborted","timestamp":1708061500742,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(df[\"Rank\"],df[\"P75th\"])\n","df.plot(x=\"Rank\",y=\"P75th\")"],"metadata":{"id":"IQ1dEWjCnunm","executionInfo":{"status":"aborted","timestamp":1708061500742,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["medium_column = df[\"Median\"]\n","type(medium_column)\n","medium_column.plot(kind = \"hist\")\n"],"metadata":{"id":"hm7RE3BanuoV","executionInfo":{"status":"aborted","timestamp":1708061500742,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["top_5 = df.sort_values(by = \"Median\",ascending = False).head()\n","top_5.plot(x=\"Major\",y=\"Median\",kind =\"bar\",root = 5,fontsize = 5)"],"metadata":{"id":"GL6IVdZhnupD","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["top_medians = df[df[\"Median\"] > 6000].sort_values(\"Median\")\n","top_medians.plot(x = \"Major\", y = [\"p25th\"],kind =\"bar\")"],"metadata":{"id":"LzUDVwTOnup0","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.plot(x-\"Median\", y = \"Unemployment-rate\",kind = \"Scatter\")"],"metadata":{"id":"WhnAWcBmnuqk","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cat_totals = df.groupby(\"Major-category\"[\"Total\"]sum().sort_values())\n","cat_totals\n","cat_totals.plot(kind = \"bar\",fontsize = 4)"],"metadata":{"id":"jk0Ztgw8nur6","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":10,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["small_cat_totals = cat_totals[cat_totals <]"],"metadata":{"id":"V637F2Wtnus3","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":9,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"VSXen7Ibnut-","executionInfo":{"status":"aborted","timestamp":1708061500743,"user_tz":-330,"elapsed":9,"user":{"displayName":"PAWAN KUMAR SAH","userId":"01444090124950836488"}}},"execution_count":null,"outputs":[]}]}